# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio = [ 1, 3, 3 ]
sort_by = "natural"

[opener]
edit = [
	{ run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
	{ run = 'code "$@" --enable-wayland-ime --disable-gpu', orphan = true, desc = "VSCode", for = "unix" },
	{ run = 'kitty --hold sh -c "$EDITOR $@"', desc = "$EDITOR in a new window", orphan = true, for = "unix" },
	{ run = 'gnome-text-editor "$@"', desc = "gnome text editor", orphan = true, for = "unix" },
]
open = [
	{ run = 'xdg-open "$1"', orphan = true, desc = "Open", for = "linux" },
]
open_folder = [
	{ run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
	{ run = 'code "$@" --enable-wayland-ime --disable-gpu', orphan = true, desc = "VSCode", for = "unix" },
	{ run = 'kitty --hold sh -c "$EDITOR $@"', desc = "$EDITOR in a new window", orphan = true, for = "unix" },
	{ run = 'xdg-open "$1"', orphan = true, desc = "Open", for = "linux" },
]
reveal = [
	{ run = 'xdg-open "$(dirname "$1")"', orphan = true, desc = "Reveal", for = "linux" },
	# { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
	{ run = 'ya pub extract --list %*',   desc = "Extract here", for = "windows" },
]
extract_rar = [
    { run = 'unrar x "$1"', desc = "Extract here", for = "unix" },
]
play_audio = [
	{ run = 'g4music "$@"', orphan = true, for = "unix" },
	{ run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
]
play_video = [
	{ run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
	{ run = 'ffprobe -hide_banner -show_format -pretty "$1" 2>&1 | less', block = true, desc = "Show media info", for = "unix" },
]
show_image = [
    { run = '''kitten icat --hold "$1"; kitten icat --clear && clear''', block = true, desc = "kitten icat", for = "unix" },
]
edit_image = [
    { run = 'swappy -f "$1"', orphan = true, desc = "Edit image(swappy)", for = "unix" },
]
open_pdf = [
	{ run = 'xdg-open "$1"', orphan = true, desc = "Open", for = "linux" },
	{ run = 'firefox "$1"', orphan = true, desc = "Open pdf(firefox)", for = "linux" },
	# { run = 'sioyek "$@"', orphan = true, desc = "Open pdf(sioyek)", for = "unix" },
]
open_office = [
	{ run = 'QT_FONT_DPI=144 wps "$@"', orphan = true, desc = "Open office(WPS)", for = "unix" },
]

[open]
rules = [
	# Folder
	{ name = "*/", use = [ "open_folder", "reveal" ] },
	# Text
	{ mime = "text/*", use = [ "edit", "reveal" ] },
    # svg
	{ mime = "image/svg+xml", use = [ "edit", "open", "show_image", "reveal" ] },
	# Image
	{ mime = "image/*", use = [ "open", "show_image", "edit_image", "reveal" ] },
	# Video
	{ mime = "video/*", use = [ "play_video", "reveal" ] },
    # Audio
	{ mime = "audio/*", use = [ "play_audio", "reveal" ] },
    # pdf
	{ mime = "application/pdf", use = [ "open_pdf", "open_office", "reveal" ] },
	# Archive
	{ mime = "application/{,g}zip", use = [ "extract", "reveal" ] },
	{ mime = "application/{tar,bzip*,7z*,xz,rar}", use = [ "extract", "reveal" ] },
	# { mime = "application/rar", use = [ "extract_rar", "reveal" ] },
	# JSON
	{ mime = "application/{json,ndjson}", use = [ "edit", "reveal" ] },
    # MS office
	{ mime = "application/openxmlformats-officedocument*", use = [ "open_office", "reveal" ] },
	{ mime = "application/ms{word,-*}", use = [ "open_office", "reveal" ] },
	{ mime = "*/javascript", use = [ "edit", "reveal" ] },
	# Empty file
	{ mime = "inode/empty", use = [ "edit", "reveal" ] },
	# Fallback
	{ name = "*", use = [ "open", "reveal" ] },
]

[plugin]

prepend_spotters = [
    { mime = "video/*", run = "video-enhanced" },
    # { mime = "text/*", run = "tokei" },
    # { mime = "*/{xml,javascript,wine-extension-ini}", run = "tokei" },
    # { mime = "application/{json,ndjson}", run = "tokei" },
]

prepend_previewers = [
	{ mime = "application/rpm", run = "rpm-preview" },
]
